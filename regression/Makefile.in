# Makefile.in generated automatically by automake 1.5 from Makefile.am.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_HEADER = $(INSTALL_DATA)
transform = @program_transform_name@
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
AMTAR = @AMTAR@
AWK = @AWK@
CC = @CC@
CPP = @CPP@
DEPDIR = @DEPDIR@
EXEEXT = @EXEEXT@
GCC_ONLY = @GCC_ONLY@
GNUGO_ALL_WARNINGS = @GNUGO_ALL_WARNINGS@
GNUGO_SOME_WARNINGS = @GNUGO_SOME_WARNINGS@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
MAINT = @MAINT@
NO_WARNINGS = @NO_WARNINGS@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
RANLIB = @RANLIB@
VERSION = @VERSION@
am__include = @am__include@
am__quote = @am__quote@
dfa_c = @dfa_c@
glibconfig = @glibconfig@
install_sh = @install_sh@
perl = @perl@

TST = life.tst owl.tst optics.tst reading.tst strategy.tst \
      ld_owl.tst connection.tst  \
      neurogo.tst arb.tst strategy2.tst strategy3.tst rosebud.tst \
      heikki.tst golife.tst dniwog.tst strategy4.tst \
      nicklas1.tst nicklas2.tst nicklas3.tst nicklas4.tst nicklas5.tst \
      filllib.tst arion.tst endgame.tst viking.tst ego.tst atari_atari.tst \
      score.tst manyfaces.tst cutstone.tst newscore.tst blunder.tst \
      niki.tst trevor.tst tactics.tst buzco.tst \
      capture.tst connect.tst global.tst vie.tst \
      endgame_rot.tst optics_rot.tst connection_rot.tst ld_owl_rot.tst \
      owl_rot.tst score_rot.tst strategy_rot.tst connect_rot.tst \
      reading_rot.tst arend.tst \
      trevora.tst trevorb.tst trevorc.tst trevord.tst semeai.tst 13x13.tst \
      nngs.tst lazarus.tst nngs1.tst score2.tst


noinst_SCRIPTS = eval.sh regress.sh test.sh

EXTRA_DIST = golois games $(TST) $(noinst_SCRIPTS) regress.awk \
             STRATEGY NICKLAS READING BREAKAGE \
	     regress.pl regress.plx


# Remove these files here... they are created locally
DISTCLEANFILES = *.orig *~
subdir = regression
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
SCRIPTS = $(noinst_SCRIPTS)

DIST_SOURCES =
DIST_COMMON = README Makefile.am Makefile.in
all: all-am

.SUFFIXES:
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  regression/Makefile
Makefile: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && \
	  CONFIG_HEADERS= CONFIG_LINKS= \
	  CONFIG_FILES=$(subdir)/$@ $(SHELL) ./config.status
uninstall-info-am:
tags: TAGS
TAGS:


DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	  if test -f $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    $(mkinstalldirs) "$(distdir)/$$dir"; \
	  fi; \
	  if test -d $$d/$$file; then \
	    cp -pR $$d/$$file $(distdir) \
	    || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(SCRIPTS)

installdirs:

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES) stamp-h stamp-h[0-9]*
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-generic

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-generic

uninstall-am: uninstall-info-am

.PHONY: all all-am check check-am clean clean-generic distclean \
	distclean-generic distdir dvi dvi-am info info-am install \
	install-am install-data install-data-am install-exec \
	install-exec-am install-info install-info-am install-man \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-generic uninstall uninstall-am uninstall-info-am


check: first_batch

regression: first_batch

test: all_batches

reading: reading.tst
	$(srcdir)/eval.sh reading.tst

reading_rot: reading_rot.tst
	$(srcdir)/eval.sh reading_rot.tst

owl: owl.tst
	$(srcdir)/eval.sh owl.tst

owl_rot: owl_rot.tst
	$(srcdir)/eval.sh owl_rot.tst

owl_rotall: owl.tst
	$(srcdir)/eval.sh owl.tst --gtp-initial-orientation 0
	$(srcdir)/eval.sh owl.tst --gtp-initial-orientation 1
	$(srcdir)/eval.sh owl.tst --gtp-initial-orientation 2
	$(srcdir)/eval.sh owl.tst --gtp-initial-orientation 3
	$(srcdir)/eval.sh owl.tst --gtp-initial-orientation 4
	$(srcdir)/eval.sh owl.tst --gtp-initial-orientation 5
	$(srcdir)/eval.sh owl.tst --gtp-initial-orientation 6
	$(srcdir)/eval.sh owl.tst --gtp-initial-orientation 7

optics: optics.tst
	$(srcdir)/eval.sh optics.tst

optics_rot: optics_rot.tst
	$(srcdir)/eval.sh optics_rot.tst

life: life.tst
	$(srcdir)/eval.sh life.tst --life

filllib: filllib.tst
	$(srcdir)/eval.sh filllib.tst

strategy: strategy.tst
	$(srcdir)/eval.sh strategy.tst

strategy_rot: strategy_rot.tst
	$(srcdir)/eval.sh strategy_rot.tst

strategy2: strategy2.tst
	$(srcdir)/eval.sh strategy2.tst

strategy3: strategy3.tst
	$(srcdir)/eval.sh strategy3.tst

strategy4: strategy4.tst
	$(srcdir)/eval.sh strategy4.tst

tactics: tactics.tst
	$(srcdir)/eval.sh tactics.tst

cutstone: cutstone.tst
	$(srcdir)/eval.sh cutstone.tst

ld_owl: ld_owl.tst
	$(srcdir)/eval.sh ld_owl.tst

ld_owl_rot: ld_owl_rot.tst
	$(srcdir)/eval.sh ld_owl_rot.tst

connection: connection.tst
	$(srcdir)/eval.sh connection.tst

connection_rot: connection_rot.tst
	$(srcdir)/eval.sh connection_rot.tst

endgame: endgame.tst
	$(srcdir)/eval.sh endgame.tst

endgame_rot: endgame_rot.tst
	$(srcdir)/eval.sh endgame_rot.tst

blunder: blunder.tst
	$(srcdir)/eval.sh blunder.tst

heikki: heikki.tst
	$(srcdir)/eval.sh heikki.tst

neurogo: neurogo.tst
	$(srcdir)/eval.sh neurogo.tst

arb: arb.tst
	$(srcdir)/eval.sh arb.tst

dniwog: dniwog.tst
	$(srcdir)/eval.sh dniwog.tst

rosebud: rosebud.tst
	$(srcdir)/eval.sh rosebud.tst

golife: golife.tst
	$(srcdir)/eval.sh golife.tst

arion: arion.tst
	$(srcdir)/eval.sh arion.tst

viking: viking.tst
	$(srcdir)/eval.sh viking.tst

ego: ego.tst
	$(srcdir)/eval.sh ego.tst

atari_atari: atari_atari.tst
	$(srcdir)/eval.sh atari_atari.tst

manyfaces: manyfaces.tst
	$(srcdir)/eval.sh manyfaces.tst

score: score.tst
	$(srcdir)/eval.sh score.tst

score_rot: score_rot.tst
	$(srcdir)/eval.sh score_rot.tst

newscore: newscore.tst
	$(srcdir)/eval.sh newscore.tst

score2: score2.tst
	$(srcdir)/eval.sh score2.tst

nicklas: nicklas1.tst nicklas2.tst nicklas3.tst nicklas4.tst nicklas5.tst
	$(srcdir)/eval.sh nicklas1.tst
	$(srcdir)/eval.sh nicklas2.tst
	$(srcdir)/eval.sh nicklas3.tst
	$(srcdir)/eval.sh nicklas4.tst
	$(srcdir)/eval.sh nicklas5.tst

nicklas1: nicklas1.tst
	$(srcdir)/eval.sh nicklas1.tst

nicklas2: nicklas2.tst
	$(srcdir)/eval.sh nicklas2.tst

nicklas3: nicklas3.tst
	$(srcdir)/eval.sh nicklas3.tst

nicklas4: nicklas4.tst
	$(srcdir)/eval.sh nicklas4.tst

nicklas5: nicklas5.tst
	$(srcdir)/eval.sh nicklas5.tst

niki: niki.tst
	$(srcdir)/eval.sh niki.tst

trevor: trevor.tst
	$(srcdir)/eval.sh trevor.tst

buzco: buzco.tst
	$(srcdir)/eval.sh buzco.tst

capture: capture.tst
	$(srcdir)/eval.sh capture.tst 

connect: connect.tst
	$(srcdir)/eval.sh connect.tst

connect_rot: connect_rot.tst
	$(srcdir)/eval.sh connect_rot.tst

global: global.tst
	$(srcdir)/eval.sh global.tst

vie: vie.tst
	$(srcdir)/eval.sh vie.tst

arend: arend.tst
	$(srcdir)/eval.sh arend.tst

trevora: trevora.tst
	$(srcdir)/eval.sh trevora.tst

trevorb: trevorb.tst
	$(srcdir)/eval.sh trevorb.tst

trevorc: trevorc.tst
	$(srcdir)/eval.sh trevorc.tst

trevord: trevord.tst
	$(srcdir)/eval.sh trevord.tst

semeai: semeai.tst
	$(srcdir)/eval.sh semeai.tst

semeai2: semeai2.tst
	$(srcdir)/eval.sh semeai2.tst

13x13: 13x13.tst
	$(srcdir)/eval.sh 13x13.tst

nngs: nngs.tst
	$(srcdir)/eval.sh nngs.tst

nngs1: nngs1.tst
	$(srcdir)/eval.sh nngs1.tst

lazarus: lazarus.tst
	$(srcdir)/eval.sh lazarus.tst

all_batches: first_batch second_batch third_batch fourth_batch

first_batch: 
	$(srcdir)/regress.sh $(srcdir) reading.tst
	$(srcdir)/regress.sh $(srcdir) owl.tst
	$(srcdir)/regress.sh $(srcdir) owl_rot.tst
	$(srcdir)/regress.sh $(srcdir) ld_owl.tst
	$(srcdir)/regress.sh $(srcdir) optics.tst
	$(srcdir)/regress.sh $(srcdir) filllib.tst
	$(srcdir)/regress.sh $(srcdir) atari_atari.tst
	$(srcdir)/regress.sh $(srcdir) connection.tst
	$(srcdir)/regress.sh $(srcdir) blunder.tst
	$(srcdir)/regress.sh $(srcdir) trevora.tst
	$(srcdir)/regress.sh $(srcdir) nngs1.tst
	$(srcdir)/regress.sh $(srcdir) strategy.tst

second_batch: 
	$(srcdir)/regress.sh $(srcdir) endgame.tst
	$(srcdir)/regress.sh $(srcdir) heikki.tst
	$(srcdir)/regress.sh $(srcdir) neurogo.tst
	$(srcdir)/regress.sh $(srcdir) arb.tst
	$(srcdir)/regress.sh $(srcdir) rosebud.tst
	$(srcdir)/regress.sh $(srcdir) golife.tst
	$(srcdir)/regress.sh $(srcdir) arion.tst
	$(srcdir)/regress.sh $(srcdir) viking.tst
	$(srcdir)/regress.sh $(srcdir) ego.tst
	$(srcdir)/regress.sh $(srcdir) dniwog.tst
	$(srcdir)/regress.sh $(srcdir) lazarus.tst
	$(srcdir)/regress.sh $(srcdir) trevorb.tst
	$(srcdir)/regress.sh $(srcdir) strategy2.tst

third_batch: 
	$(srcdir)/regress.sh $(srcdir) nicklas1.tst
	$(srcdir)/regress.sh $(srcdir) nicklas2.tst
	$(srcdir)/regress.sh $(srcdir) nicklas3.tst
	$(srcdir)/regress.sh $(srcdir) nicklas4.tst
	$(srcdir)/regress.sh $(srcdir) nicklas5.tst
	$(srcdir)/regress.sh $(srcdir) manyfaces.tst
	$(srcdir)/regress.sh $(srcdir) niki.tst
	$(srcdir)/regress.sh $(srcdir) trevor.tst
	$(srcdir)/regress.sh $(srcdir) tactics.tst
	$(srcdir)/regress.sh $(srcdir) buzco.tst
	$(srcdir)/regress.sh $(srcdir) nngs.tst
	$(srcdir)/regress.sh $(srcdir) trevorc.tst
	$(srcdir)/regress.sh $(srcdir) strategy3.tst

fourth_batch: 
	$(srcdir)/regress.sh $(srcdir) capture.tst
	$(srcdir)/regress.sh $(srcdir) connect.tst
	$(srcdir)/regress.sh $(srcdir) global.tst
	$(srcdir)/regress.sh $(srcdir) vie.tst
	$(srcdir)/regress.sh $(srcdir) arend.tst
	$(srcdir)/regress.sh $(srcdir) 13x13.tst
	$(srcdir)/regress.sh $(srcdir) semeai.tst
	$(srcdir)/regress.sh $(srcdir) trevord.tst
	$(srcdir)/regress.sh $(srcdir) strategy4.tst
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
